연산자(operator) : 연산을 수행하는 기호(+, -, *, / 등)
피연산자(operand) : 연산자의 작업 대상(변수, 상수, 리터럴, 수식)
ex) x + 3 에서 x, 3은 피연산자 / + 는 연산자

피연산자의 개수에 따른 분류
 - 피연산자가 1개 : 단항연산자
 - 피연산자가 2개 : 이항연산자
 - 피연산자가 3개 : 삼항연산자(? : 하나뿐임) / 조건식 ? 식1(참) : 식2(거짓)

* 연산자의 우선순위
 - 산술 > 비교 > 논리 > 대입. 대입은 제일 마지막에 수행
 - 단항 > 이항 > 삼항
 - 대입과 단항 연산자를 제외하면 모두 왼쪽 -> 오른쪽
 
증감연산자
 - 전위형 : 값이 참조되기 전에 증감시킨다. (j = ++i;)
 - 후위형 : 값이 참조된 후에 증감시킨다. (j = i++;)
 - 증감연산자가 독립적으로 사용된 경우 전위형과 후위형의 차이가 없다.
 
 j = i++; 은
 j = i;
 i++; 이다.
 
 '0' = 48 / 'A' = 65 / 'a' = 97
 
String str1 = new String("abc");
String str2 = new String("abc");
str1==str2 // <- false : 내용은 같으나 서로 다른 객체이기 때문에
*** 문자열 비교시 항상 equals() 사용

